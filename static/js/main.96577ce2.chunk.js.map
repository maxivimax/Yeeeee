{"version":3,"sources":["Yeee/Item.js","context.js","Yeee/List.js","App.js","serviceWorker.js","index.js"],"names":["g","styles","React","createContext","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","Item","_ref","todo","index","onChange","react_default","a","createElement","style","className","join","onClick","id","zipcode","address","fetch","method","body","headers","Authorization","Content-Type","catch","error","alert","console","log","butt","name","phone","ul","listStyle","margin","List","b","props","todos","map","Yeee_Item","key","onToggle","mapCont","height","width","marg","marginTop","App","_React$useState","useState","_React$useState2","Object","slicedToArray","jsonn","setID","_React$useState3","_React$useState4","loading","useEffect","then","response","json","data","setTimeout","length","Yeee_List","lat","lng","geo","completed","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","LayersControl","position","BaseLayer","checked","Overlay","Marker","Popup","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6JAGIA,kDAGEC,GCJUC,IAAMC,gBDIP,CACbC,GAAI,CACFC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,aACTC,OAAQ,iBACRC,aAAc,MACdC,aAAc,SAEhBC,MAAO,CACLC,YAAa,UAoDFC,MA3Bf,SAAAC,GAAyC,IAAzBC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,MAGpB,OAHuCF,EAAZG,SAIzBC,EAAAC,EAAAC,cAAA,MAAIC,MAAOrB,EAAOG,IAChBe,EAAAC,EAAAC,cAAA,QAAME,UAJM,GAIaC,KAAK,MAC5BL,EAAAC,EAAAC,cAAA,UAAQI,QAAS,kBA3BRC,EA2BsBT,EAAQ,EA3B1BU,EA2B6BX,EAAKY,QAAQD,QA1BrD,WAAaD,EAAK,eAAiBC,EAAU,KACnD3B,EAAI6B,MAAM,2BAA2B,CACpCC,OAAQ,OACRC,KAAM,CACLL,GAAMA,EACNC,QAAW,oBAEZK,QAAS,CACTC,cAAiB,oBACjBC,eAAgB,sBAGhBC,MAAM,SAAAC,GACPC,MAAMD,UAELE,QAAQC,IAAIvC,GAhBjB,IAAiB0B,EAAIC,GA2BoDL,MAAOrB,EAAOuC,MAA/E,gBADF,WAKErB,EAAAC,EAAAC,cAAA,cAASJ,EAAQ,GALnB,aAOGD,EAAKyB,KAPR,oBASGzB,EAAK0B,SEpDRzC,EAAS,CACb0C,GAAI,CACFC,UAAW,OACXC,OAAQ,EACRrC,QAAS,IA0BEsC,IC9BX1B,EACA2B,ED6BWD,EAtBf,SAAcE,GACZ,OACE7B,EAAAC,EAAAC,cAAA,MAAIC,MAAOrB,EAAO0C,IACfK,EAAMC,MAAMC,IAAI,SAAClC,EAAMC,GACtB,OACEE,EAAAC,EAAAC,cAAC8B,EAAD,CACEnC,KAAMA,EACNoC,IAAKpC,EAAKU,GACVT,MAAOA,EACPC,SAAU8B,EAAMK,uDCZtBpD,EAAS,CACbqD,QAAS,CACPC,OAAQ,QAEVf,KAAM,CACJe,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,UAAW,MACX/C,aAAc,QAoLHgD,MAhLf,WAAe,IAAAC,EACU1D,IAAM2D,SAAS,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAEiBjE,IAAM2D,UAAS,GAFhCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GA0Db,OA1DaA,EAAA,GAIbE,oBAAU,WACRzC,MAAM,8CACH0C,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJC,WAAW,WACTT,EAAMQ,IACL,QAEN,IA+CDvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZ0C,EAAMW,OACLzD,EAAAC,EAAAC,cAACwD,EAAD,CAAM5B,MAAOgB,EAAOZ,SAzC9B,SAAgB3B,GACZwC,EACED,EAAMf,IAAI,SAAAe,GAPhB,IAAiBa,EAAKC,EAiBd,OATId,EAAMvC,KAAOA,IACfN,EAAI6C,EAAMrC,QAAQoD,IAAIF,IACtB/B,EAAIkB,EAAMrC,QAAQoD,IAAID,IAEtBd,EAAMgB,WAAahB,EAAMgB,UACH,GAAnBhB,EAAMgB,YAbFH,EAcG1D,EAdE2D,EAcChC,EAbnBT,QAAQC,IAAIuC,GACZxC,QAAQC,IAAIwC,KAeDd,QA8BHI,EAAU,KACZlD,EAAAC,EAAAC,cAAA,+BAGJF,EAAAC,EAAAC,cAAA,OAAKC,MAAOrB,EAAOwD,MACjBtC,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAc5D,MAAOrB,EAAOqD,QAAS6B,OAAQ,CAAC,QAAS,KAAOC,KAAM,GAAIC,iBAAiB,GACvFlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEhBrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAeC,SAAS,YAClBvE,EAAAC,EAAAC,cAACoE,EAAA,EAAcE,UAAf,CAAyBC,SAAO,EAACnD,KAAK,wBACpCtB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,wDAGRrE,EAAAC,EAAAC,cAACoE,EAAA,EAAcE,UAAf,CAAyBlD,KAAK,+BAC5BtB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,yDAGRrE,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,iBAC1BtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,QAAS,UACzBvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,wBAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,gBAC1BtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,SAAU,UAC1BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,uBAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,oBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,SAAU,UAC5BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,2BAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,oBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,CAAC,SAAU,UAC3BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,2BAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,oBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,QAAS,UAC3BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,2BAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,wBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,QAAS,UAC3BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,+BAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,mBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,CAAC,QAAS,UAC1BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,0BAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,4BACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,QAAU,WAC5BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,mCAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,mBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,CAAC,SAAU,WAC3BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,0BAMN5E,EAAAC,EAAAC,cAACoE,EAAA,EAAcI,QAAf,CAAuBpD,KAAK,sBACxBtB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAQJ,SAAU,EAAE,QAAS,UAC3BvE,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,kCC5KQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.96577ce2.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport Context from '../context'\nlet g\nlet bodyy \n\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '.5rem 1rem',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n    marginBottom: '.5rem'\n  },\n  input: {\n    marginRight: '1rem'\n  }\n}\n\nfunction fetch1h(id, zipcode){\n  bodyy = \"[{'id': \" + id + \" 'zipcode': \" + zipcode + \"}]\"\n    g = fetch('https://httpbin.org/post',{\n     method: 'POST',\n     body: {\n      'id': id,\n      'zipcode': 'application/json'\n    },\n     headers: {\n     'Authorization': 'very_secret_token',\n     'Content-Type': 'application/json'\n    }\n   })\n    .catch(error => {\n    alert(error); // Error: Not Found\n  });\n     console.log(g);\n\n     \n}\n\nfunction Item({ todo, index, onChange }) {\n  const classes = []\n\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(' ')}>  \n        <button onClick={() => fetch1h(index + 1, todo.address.zipcode)} style={styles.butt} >\n          ðŸ“¤\n        </button>\n        Â Â \n        <strong>{index + 1}</strong>Â |\n        &nbsp;\n        {todo.name}\n        Â Â |Â Â \n        {todo.phone} \n      </span>\n\n    </li>\n  )\n}\n\nItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default Item\n","import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Item from './Item'\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    margin: 0,\n    padding: 0\n  }\n}\n\nfunction List(props) {\n  return (\n    <ul style={styles.ul}>\n      {props.todos.map((todo, index) => {\n        return (\n          <Item\n            todo={todo}\n            key={todo.id}\n            index={index}\n            onChange={props.onToggle}\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onToggle: PropTypes.func.isRequired\n}\n\nexport default List\n","import React, { useEffect } from 'react'\nimport List from './Yeee/List'\nimport { MapContainer, TileLayer, Marker, Popup, LayersControl, Circle, LayerGroup, FeatureGroup, Rectangle } from 'react-leaflet'\n\nlet a\nlet b\n\nlet g\n\nconst styles = {\n  mapCont: {\n    height: '70vh'\n  },\n  butt: {\n    height: '20vh',\n    width: '20vh'\n  },\n  marg: {\n    marginTop: '5vw',\n    marginBottom: '3vw'\n  } \n}\n\nfunction App() {\n  const [jsonn, setID] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(data => {\n        setTimeout(() => {\n          setID(data)\n        }, 2000)\n      })\n  }, [])\n\n\n\nfunction AddCard(lat, lng) {\n    console.log(lat)\n    console.log(lng)\n  }\n\nfunction toggle(id) {\n    setID(\n      jsonn.map(jsonn => {\n        if (jsonn.id === id) {\n          a = jsonn.address.geo.lat\n          b = jsonn.address.geo.lng\n\n          jsonn.completed = !jsonn.completed\n          if(jsonn.completed == true){\n            AddCard(a, b);\n          }\n        }\n        return jsonn\n      })\n    )\n  }\n\nfunction fetch1h(id){\n    g = fetch('https://httpbin.org/post',{\n     method: 'POST',\n     body: {\n      'id': id,\n      'zipcode': 'application/json'\n    },\n     headers: {\n     'Authorization': 'very_secret_token',\n     'Content-Type': 'application/json'\n    }\n   })\n    .catch(error => {\n    alert(error); // Error: Not Found\n  });\n     console.log(g)\n\n     \n}\n\n  return (\n    <div>\n      <div className='wrapper'>\n        {jsonn.length ? (\n          <List todos={jsonn} onToggle={ toggle } />\n        ) : loading ? null : (\n          <p>JSON in down.....</p>\n        )}\n      </div>\n      <div style={styles.marg}>\n        <h1>ÐšÐ°Ñ€Ñ‚Ð°(React Leaflet Ð¸ Openstreetmap)</h1>\n        <MapContainer style={styles.mapCont} center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n<LayersControl position=\"topright\">\n      <LayersControl.BaseLayer checked name=\"OpenStreetMap.Mapnik\">\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n        />\n      </LayersControl.BaseLayer>\n      <LayersControl.Overlay name=\"Leanne Graham\">\n        <Marker position={[-37.3159, 81.1496]}>\n            <Popup>\n              Leanne Graham\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Ervin Howell\">\n        <Marker position={[-43.9509, -34.4618]}>\n            <Popup>\n              Ervin Howell\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Clementine Bauch\">\n          <Marker position={[-68.6102, -47.0653]}>\n            <Popup>\n              Clementine Bauch\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Patricia Lebsack\">\n          <Marker position={[29.4572, -164.2990]}>\n            <Popup>\n              Patricia Lebsack\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Chelsey Dietrich\">\n          <Marker position={[-31.8129, 62.5342]}>\n            <Popup>\n              Chelsey Dietrich\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Mrs. Dennis Schulist\">\n          <Marker position={[-71.4197, 71.7478]}>\n            <Popup>\n              Mrs. Dennis Schulist\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Kurtis Weissnat\">\n          <Marker position={[24.8918, 21.8984]}>\n            <Popup>\n              Kurtis Weissnat\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Nicholas Runolfsdottir V\">\n          <Marker position={[-14.3990, -120.7677]}>\n            <Popup>\n              Nicholas Runolfsdottir V\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Glenna Reichert\">\n          <Marker position={[24.6463, -168.8889]}>\n            <Popup>\n              Glenna Reichert\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n      <LayersControl.Overlay name=\"Clementina DuBuque\">\n          <Marker position={[-38.2386, 57.2232]}>\n            <Popup>\n              Clementina DuBuque\n            </Popup>\n          </Marker>\n      </LayersControl.Overlay>\n\n    </LayersControl>\n\n        </MapContainer>\n      </div>\n    </div>\n\n  )\n}\n\nexport default App\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}